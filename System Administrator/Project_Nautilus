#Task1: Create a Linux User with non-interactive shell in app server 2
sudo adduser --shell /bin/false userName
=======================================================================================================================================================================
#Task2: Please give everyone executable permissions to /tmp/xfusioncorp.sh script on App Server 3
sudo chmod 555 /path/to/file.sh
=======================================================================================================================================================================
#Task3: Linux TimeZones Setting
sudo timedatectl set-timezone America/New_York
=======================================================================================================================================================================
#Task4: Set banner / motd
Paste the message into /etc/issue, /etc/issue.net for banner then /etc/motd for motd.
=======================================================================================================================================================================
#Task5: Install and configure NTP server on App Server 1. Add NTP server 3.europe.pool.ntp.org in NTP configuration on App Server 1.
sudo yum install ntp -y
#Edit the configuration files
vi /etc/ntp.conf
# Add the required NTP server to the list
server 3.europe.pool.ntp.org iburst
=======================================================================================================================================================================
#Task6: Configure passwordless ssh authentication from jump server to other servers on the network
#Create ssh key on the jump server
ssh-keygen
#Copy key to remote servers
ssh-copy-id remoteuser@ipaddress
=======================================================================================================================================================================
#Task7: Install SElinux package on server
#Update yum package first
sudo yum update
#Install the selinux dependencies
sudo yum install policycoreutils policycoreutils-python setools setools-console setroubleshoot
#Install selinux
yum install selinux-policy selinux-policy-targeted
#Enable selinux in the /etc/selinux/config by changing SELINUX=disabled to SELINUX=enforcing
#Reboot server to complete status
#Check selinux status with;
sudo sestatus
=======================================================================================================================================================================
#Task8: Install cronie and setup cron job with root user
#Update yum package
sudo yum update -y
#Instal Cronie
sudo yum install cronie -y
#Start crond service
sudo systemctl start crond
#Enable crond to always start on reboot
sudo systemctl enable crond
#Switch to root user
sudo -i
#Edit cron table and paste cron job command
crontab -e
=======================================================================================================================================================================
#Task9: Replace all occurances of the string Sample to Maritime on the XML file /root/nautilus.xml located in the backup server.
#We can use the "sed" command  which is a cli utility for manipulating texts to do this search and replace
sed -i 's/Sample/Maritime/g' your_xml_file.xml
#"-i" tells sed to edit the file in place, i.e., modify the file itself instead of just printing the modified text to the console.
#"'s/Sample/Maritime/g'" is the sed command that tells sed to replace all occurrences of "Sample" with "Maritime".
#The "s" at the beginning indicates that sed should substitute text, and the "g" at the end tells sed to replace all occurrences of the pattern, not just the first one.
=======================================================================================================================================================================
#Task10: Copy /tmp/nautilus.txt.gpg file from jump server to App Server 1 at location /home/code
#We can use the scp command:
scp /tmp/nautilus.txt.gpg tony@172.16.238.10:/home/code/nautilus.txt.gpg
=======================================================================================================================================================================
#Task11: Create a user named siva in App Server 3 without a home directory.
sudo adduser -r siva
=======================================================================================================================================================================
#Task12: change the default runlevel so that they can boot in GUI (graphical user interface) by default.
#If run levels are in use then edit the /etc/inittab file
sudo vi /etc/inittab
#Edit the line that starts with "id:3:initdefault:" and change the "3" to "5", so it looks like this: id:5:initdefault:
#If target is being used instead of run levels run the command;
sudo systemctl set-default graphical.target
#To change back to multi-user;
sudo systemctl set-default multi-user.target
#To check current status;
systemctl get-default
#Remember to reboot for changes to take effect.
=======================================================================================================================================================================
#Task13:create a user named ravi on the App Server 1. Set expiry date to 2021-02-17 in Stratos Datacenter
sudo useradd -e 2021-02-17 ravi
=======================================================================================================================================================================
#Task14: Copy out all the files owned by a particular user from a directory and its sub directories without altering the directory structrue into another directory.
find /path/to/directory -user username -type f -exec cp --parents {} /directory/to/copy/to \;
#To check for correctness, count number of files owned by that user in the default directory and count in the new directory as well.
find /path/to/directory -user username -type f | wc -l #-type f specifies that only regular files should be selected, excluding directories.
#-exec cp --parents {} /directory/to/copy/to \; copies each file to the /directory/to/copy/to directory while preserving the directory structure.
#The {} is a placeholder for the filename found by find, and the --parents option preserves the directory structure of the file being copied.
=======================================================================================================================================================================
#Task15:

=======================================================================================================================================================================
#Task16:

=======================================================================================================================================================================
#Task17:

=======================================================================================================================================================================
#Task18:

=======================================================================================================================================================================
#Task19:

=======================================================================================================================================================================




